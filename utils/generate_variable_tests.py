import os
import torch
from save_ndarray import save_ndarray_to_file

torch.manual_seed(0)

test = "test_add_variable"
dir = f"../test/test_data/test_variable/{test}/"
n = 10
a0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
b0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
d0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
c0 = a0 + b0
c0.backward(d0)
save_ndarray_to_file(os.path.join(dir, "a0.txt"), a0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b0.txt"), b0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c0.txt"), c0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d0.txt"), d0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a0_grad.txt"), a0.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b0_grad.txt"), b0.grad.detach().numpy())
a1 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
b1 = torch.rand(1, n, dtype=torch.double, requires_grad=True)
d1 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
c1 = a1 + b1
c1.backward(d1)
save_ndarray_to_file(os.path.join(dir, "a1.txt"), a1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b1.txt"), b1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c1.txt"), c1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d1.txt"), d1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a1_grad.txt"), a1.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b1_grad.txt"), b1.grad.detach().numpy())
a2 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
b2 = torch.rand(n, 1, dtype=torch.double, requires_grad=True)
d2 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
c2 = a2 + b2
c2.backward(d2)
save_ndarray_to_file(os.path.join(dir, "a2.txt"), a2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b2.txt"), b2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c2.txt"), c2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d2.txt"), d2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a2_grad.txt"), a2.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b2_grad.txt"), b2.grad.detach().numpy())
a3 = torch.rand(n, n, 1, dtype=torch.double, requires_grad=True)
b3 = torch.rand(1, n, n, dtype=torch.double, requires_grad=True)
d3 = torch.rand(n, n, n, dtype=torch.double, requires_grad=True)
c3 = a3 + b3
c3.backward(d3)
save_ndarray_to_file(os.path.join(dir, "a3.txt"), a3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b3.txt"), b3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c3.txt"), c3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d3.txt"), d3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a3_grad.txt"), a3.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b3_grad.txt"), b3.grad.detach().numpy())
a4 = torch.rand(1, n, n, n, dtype=torch.double, requires_grad=True)
b4 = torch.rand(n, 1, n, n, dtype=torch.double, requires_grad=True)
d4 = torch.rand(n, n, n, n, dtype=torch.double, requires_grad=True)
c4 = a4 + b4
c4.backward(d4)
save_ndarray_to_file(os.path.join(dir, "a4.txt"), a4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b4.txt"), b4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c4.txt"), c4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d4.txt"), d4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a4_grad.txt"), a4.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b4_grad.txt"), b4.grad.detach().numpy())
a5 = torch.rand(n, 1, n, n, n, dtype=torch.double, requires_grad=True)
b5 = torch.rand(1, n, 1, n, n, dtype=torch.double, requires_grad=True)
d5 = torch.rand(n, n, n, n, n, dtype=torch.double, requires_grad=True)
c5 = a5 + b5
c5.backward(d5)
save_ndarray_to_file(os.path.join(dir, "a5.txt"), a5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b5.txt"), b5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c5.txt"), c5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d5.txt"), d5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a5_grad.txt"), a5.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b5_grad.txt"), b5.grad.detach().numpy())

test = "test_subtract_variable"
dir = f"../test/test_data/test_variable/{test}/"
n = 10
a0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
b0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
d0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
c0 = a0 - b0
c0.backward(d0)
save_ndarray_to_file(os.path.join(dir, "a0.txt"), a0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b0.txt"), b0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c0.txt"), c0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d0.txt"), d0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a0_grad.txt"), a0.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b0_grad.txt"), b0.grad.detach().numpy())
a1 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
b1 = torch.rand(1, n, dtype=torch.double, requires_grad=True)
d1 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
c1 = a1 - b1
c1.backward(d1)
save_ndarray_to_file(os.path.join(dir, "a1.txt"), a1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b1.txt"), b1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c1.txt"), c1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d1.txt"), d1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a1_grad.txt"), a1.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b1_grad.txt"), b1.grad.detach().numpy())
a2 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
b2 = torch.rand(n, 1, dtype=torch.double, requires_grad=True)
d2 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
c2 = a2 - b2
c2.backward(d2)
save_ndarray_to_file(os.path.join(dir, "a2.txt"), a2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b2.txt"), b2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c2.txt"), c2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d2.txt"), d2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a2_grad.txt"), a2.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b2_grad.txt"), b2.grad.detach().numpy())
a3 = torch.rand(n, n, 1, dtype=torch.double, requires_grad=True)
b3 = torch.rand(1, n, n, dtype=torch.double, requires_grad=True)
d3 = torch.rand(n, n, n, dtype=torch.double, requires_grad=True)
c3 = a3 - b3
c3.backward(d3)
save_ndarray_to_file(os.path.join(dir, "a3.txt"), a3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b3.txt"), b3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c3.txt"), c3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d3.txt"), d3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a3_grad.txt"), a3.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b3_grad.txt"), b3.grad.detach().numpy())
a4 = torch.rand(1, n, n, n, dtype=torch.double, requires_grad=True)
b4 = torch.rand(n, 1, n, n, dtype=torch.double, requires_grad=True)
d4 = torch.rand(n, n, n, n, dtype=torch.double, requires_grad=True)
c4 = a4 - b4
c4.backward(d4)
save_ndarray_to_file(os.path.join(dir, "a4.txt"), a4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b4.txt"), b4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c4.txt"), c4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d4.txt"), d4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a4_grad.txt"), a4.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b4_grad.txt"), b4.grad.detach().numpy())
a5 = torch.rand(n, 1, n, n, n, dtype=torch.double, requires_grad=True)
b5 = torch.rand(1, n, 1, n, n, dtype=torch.double, requires_grad=True)
d5 = torch.rand(n, n, n, n, n, dtype=torch.double, requires_grad=True)
c5 = a5 - b5
c5.backward(d5)
save_ndarray_to_file(os.path.join(dir, "a5.txt"), a5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b5.txt"), b5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c5.txt"), c5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d5.txt"), d5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a5_grad.txt"), a5.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b5_grad.txt"), b5.grad.detach().numpy())

test = "test_multiply_variable"
dir = f"../test/test_data/test_variable/{test}/"
n = 10
a0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
b0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
d0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
c0 = a0 * b0
c0.backward(d0)
save_ndarray_to_file(os.path.join(dir, "a0.txt"), a0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b0.txt"), b0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c0.txt"), c0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d0.txt"), d0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a0_grad.txt"), a0.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b0_grad.txt"), b0.grad.detach().numpy())
a1 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
b1 = torch.rand(1, n, dtype=torch.double, requires_grad=True)
d1 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
c1 = a1 * b1
c1.backward(d1)
save_ndarray_to_file(os.path.join(dir, "a1.txt"), a1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b1.txt"), b1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c1.txt"), c1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d1.txt"), d1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a1_grad.txt"), a1.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b1_grad.txt"), b1.grad.detach().numpy())
a2 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
b2 = torch.rand(n, 1, dtype=torch.double, requires_grad=True)
d2 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
c2 = a2 * b2
c2.backward(d2)
save_ndarray_to_file(os.path.join(dir, "a2.txt"), a2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b2.txt"), b2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c2.txt"), c2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d2.txt"), d2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a2_grad.txt"), a2.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b2_grad.txt"), b2.grad.detach().numpy())
a3 = torch.rand(n, n, 1, dtype=torch.double, requires_grad=True)
b3 = torch.rand(1, n, n, dtype=torch.double, requires_grad=True)
d3 = torch.rand(n, n, n, dtype=torch.double, requires_grad=True)
c3 = a3 * b3
c3.backward(d3)
save_ndarray_to_file(os.path.join(dir, "a3.txt"), a3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b3.txt"), b3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c3.txt"), c3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d3.txt"), d3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a3_grad.txt"), a3.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b3_grad.txt"), b3.grad.detach().numpy())
a4 = torch.rand(1, n, n, n, dtype=torch.double, requires_grad=True)
b4 = torch.rand(n, 1, n, n, dtype=torch.double, requires_grad=True)
d4 = torch.rand(n, n, n, n, dtype=torch.double, requires_grad=True)
c4 = a4 * b4
c4.backward(d4)
save_ndarray_to_file(os.path.join(dir, "a4.txt"), a4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b4.txt"), b4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c4.txt"), c4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d4.txt"), d4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a4_grad.txt"), a4.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b4_grad.txt"), b4.grad.detach().numpy())
a5 = torch.rand(n, 1, n, n, n, dtype=torch.double, requires_grad=True)
b5 = torch.rand(1, n, 1, n, n, dtype=torch.double, requires_grad=True)
d5 = torch.rand(n, n, n, n, n, dtype=torch.double, requires_grad=True)
c5 = a5 * b5
c5.backward(d5)
save_ndarray_to_file(os.path.join(dir, "a5.txt"), a5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b5.txt"), b5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c5.txt"), c5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d5.txt"), d5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a5_grad.txt"), a5.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b5_grad.txt"), b5.grad.detach().numpy())

test = "test_divide_variable"
dir = f"../test/test_data/test_variable/{test}/"
n = 10
a0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
b0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
d0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
c0 = a0 / b0
c0.backward(d0)
save_ndarray_to_file(os.path.join(dir, "a0.txt"), a0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b0.txt"), b0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c0.txt"), c0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d0.txt"), d0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a0_grad.txt"), a0.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b0_grad.txt"), b0.grad.detach().numpy())
a1 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
b1 = torch.rand(1, n, dtype=torch.double, requires_grad=True)
d1 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
c1 = a1 / b1
c1.backward(d1)
save_ndarray_to_file(os.path.join(dir, "a1.txt"), a1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b1.txt"), b1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c1.txt"), c1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d1.txt"), d1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a1_grad.txt"), a1.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b1_grad.txt"), b1.grad.detach().numpy())
a2 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
b2 = torch.rand(n, 1, dtype=torch.double, requires_grad=True)
d2 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
c2 = a2 / b2
c2.backward(d2)
save_ndarray_to_file(os.path.join(dir, "a2.txt"), a2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b2.txt"), b2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c2.txt"), c2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d2.txt"), d2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a2_grad.txt"), a2.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b2_grad.txt"), b2.grad.detach().numpy())
a3 = torch.rand(n, n, 1, dtype=torch.double, requires_grad=True)
b3 = torch.rand(1, n, n, dtype=torch.double, requires_grad=True)
d3 = torch.rand(n, n, n, dtype=torch.double, requires_grad=True)
c3 = a3 / b3
c3.backward(d3)
save_ndarray_to_file(os.path.join(dir, "a3.txt"), a3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b3.txt"), b3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c3.txt"), c3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d3.txt"), d3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a3_grad.txt"), a3.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b3_grad.txt"), b3.grad.detach().numpy())
a4 = torch.rand(1, n, n, n, dtype=torch.double, requires_grad=True)
b4 = torch.rand(n, 1, n, n, dtype=torch.double, requires_grad=True)
d4 = torch.rand(n, n, n, n, dtype=torch.double, requires_grad=True)
c4 = a4 / b4
c4.backward(d4)
save_ndarray_to_file(os.path.join(dir, "a4.txt"), a4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b4.txt"), b4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c4.txt"), c4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d4.txt"), d4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a4_grad.txt"), a4.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b4_grad.txt"), b4.grad.detach().numpy())
a5 = torch.rand(n, 1, n, n, n, dtype=torch.double, requires_grad=True)
b5 = torch.rand(1, n, 1, n, n, dtype=torch.double, requires_grad=True)
d5 = torch.rand(n, n, n, n, n, dtype=torch.double, requires_grad=True)
c5 = a5 / b5
c5.backward(d5)
save_ndarray_to_file(os.path.join(dir, "a5.txt"), a5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b5.txt"), b5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c5.txt"), c5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d5.txt"), d5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a5_grad.txt"), a5.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b5_grad.txt"), b5.grad.detach().numpy())

test = "test_power_variable"
dir = f"../test/test_data/test_variable/{test}/"
n = 10
a0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
b0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
d0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
c0 = a0**b0
c0.backward(d0)
save_ndarray_to_file(os.path.join(dir, "a0.txt"), a0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b0.txt"), b0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c0.txt"), c0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d0.txt"), d0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a0_grad.txt"), a0.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b0_grad.txt"), b0.grad.detach().numpy())
a1 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
b1 = torch.rand(1, n, dtype=torch.double, requires_grad=True)
d1 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
c1 = a1**b1
c1.backward(d1)
save_ndarray_to_file(os.path.join(dir, "a1.txt"), a1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b1.txt"), b1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c1.txt"), c1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d1.txt"), d1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a1_grad.txt"), a1.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b1_grad.txt"), b1.grad.detach().numpy())
a2 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
b2 = torch.rand(n, 1, dtype=torch.double, requires_grad=True)
d2 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
c2 = a2**b2
c2.backward(d2)
save_ndarray_to_file(os.path.join(dir, "a2.txt"), a2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b2.txt"), b2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c2.txt"), c2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d2.txt"), d2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a2_grad.txt"), a2.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b2_grad.txt"), b2.grad.detach().numpy())
a3 = torch.rand(n, n, 1, dtype=torch.double, requires_grad=True)
b3 = torch.rand(1, n, n, dtype=torch.double, requires_grad=True)
d3 = torch.rand(n, n, n, dtype=torch.double, requires_grad=True)
c3 = a3**b3
c3.backward(d3)
save_ndarray_to_file(os.path.join(dir, "a3.txt"), a3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b3.txt"), b3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c3.txt"), c3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d3.txt"), d3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a3_grad.txt"), a3.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b3_grad.txt"), b3.grad.detach().numpy())
a4 = torch.rand(1, n, n, n, dtype=torch.double, requires_grad=True)
b4 = torch.rand(n, 1, n, n, dtype=torch.double, requires_grad=True)
d4 = torch.rand(n, n, n, n, dtype=torch.double, requires_grad=True)
c4 = a4**b4
c4.backward(d4)
save_ndarray_to_file(os.path.join(dir, "a4.txt"), a4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b4.txt"), b4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c4.txt"), c4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d4.txt"), d4.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a4_grad.txt"), a4.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b4_grad.txt"), b4.grad.detach().numpy())
a5 = torch.rand(n, 1, n, n, n, dtype=torch.double, requires_grad=True)
b5 = torch.rand(1, n, 1, n, n, dtype=torch.double, requires_grad=True)
d5 = torch.rand(n, n, n, n, n, dtype=torch.double, requires_grad=True)
c5 = a5**b5
c5.backward(d5)
save_ndarray_to_file(os.path.join(dir, "a5.txt"), a5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b5.txt"), b5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c5.txt"), c5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d5.txt"), d5.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a5_grad.txt"), a5.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b5_grad.txt"), b5.grad.detach().numpy())

test = "test_exp_variable"
dir = f"../test/test_data/test_variable/{test}/"
n = 10
x0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
z0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
y0 = torch.exp(x0)
y0.backward(z0)
save_ndarray_to_file(os.path.join(dir, "x0.txt"), x0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "y0.txt"), y0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "z0.txt"), z0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "x0_grad.txt"), x0.grad.detach().numpy())
x1 = torch.rand(1, n, dtype=torch.double, requires_grad=True)
z1 = torch.rand(1, n, dtype=torch.double, requires_grad=True)
y1 = torch.exp(x1)
y1.backward(z1)
save_ndarray_to_file(os.path.join(dir, "x1.txt"), x1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "y1.txt"), y1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "z1.txt"), z1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "x1_grad.txt"), x1.grad.detach().numpy())
x2 = torch.rand(n, 1, dtype=torch.double, requires_grad=True)
z2 = torch.rand(n, 1, dtype=torch.double, requires_grad=True)
y2 = torch.exp(x2)
y2.backward(z2)
save_ndarray_to_file(os.path.join(dir, "x2.txt"), x2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "y2.txt"), y2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "z2.txt"), z2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "x2_grad.txt"), x2.grad.detach().numpy())

test = "test_relu_variable"
dir = f"../test/test_data/test_variable/{test}/"
n = 10
x0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
z0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
y0 = torch.relu(x0)
y0.backward(z0)
save_ndarray_to_file(os.path.join(dir, "x0.txt"), x0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "y0.txt"), y0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "z0.txt"), z0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "x0_grad.txt"), x0.grad.detach().numpy())
x1 = torch.rand(1, n, dtype=torch.double, requires_grad=True)
z1 = torch.rand(1, n, dtype=torch.double, requires_grad=True)
y1 = torch.relu(x1)
y1.backward(z1)
save_ndarray_to_file(os.path.join(dir, "x1.txt"), x1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "y1.txt"), y1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "z1.txt"), z1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "x1_grad.txt"), x1.grad.detach().numpy())
x2 = torch.rand(n, 1, dtype=torch.double, requires_grad=True)
z2 = torch.rand(n, 1, dtype=torch.double, requires_grad=True)
y2 = torch.relu(x2)
y2.backward(z2)
save_ndarray_to_file(os.path.join(dir, "x2.txt"), x2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "y2.txt"), y2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "z2.txt"), z2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "x2_grad.txt"), x2.grad.detach().numpy())

test = "test_sum_variable"
dir = f"../test/test_data/test_variable/{test}/"
n = 10
x0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
z0 = torch.rand(n, dtype=torch.double, requires_grad=True)
y0 = torch.sum(x0, dim=0)
y0.backward(z0)
save_ndarray_to_file(os.path.join(dir, "x0.txt"), x0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "y0.txt"), y0.detach().numpy().reshape(1, -1))
save_ndarray_to_file(os.path.join(dir, "z0.txt"), z0.detach().numpy().reshape(1, -1))
save_ndarray_to_file(os.path.join(dir, "x0_grad.txt"), x0.grad.detach().numpy())
x1 = torch.rand(n // 2, n, dtype=torch.double, requires_grad=True)
z1 = torch.rand(n, dtype=torch.double, requires_grad=True)
y1 = torch.sum(x1, dim=0)
y1.backward(z1)
save_ndarray_to_file(os.path.join(dir, "x1.txt"), x1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "y1.txt"), y1.detach().numpy().reshape(1, -1))
save_ndarray_to_file(os.path.join(dir, "z1.txt"), z1.detach().numpy().reshape(1, -1))
save_ndarray_to_file(os.path.join(dir, "x1_grad.txt"), x1.grad.detach().numpy())
x2 = torch.rand(n // 2, n, dtype=torch.double, requires_grad=True)
z2 = torch.rand(n // 2, dtype=torch.double, requires_grad=True)
y2 = torch.sum(x2, dim=1)
y2.backward(z2)
save_ndarray_to_file(os.path.join(dir, "x2.txt"), x2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "y2.txt"), y2.detach().numpy().reshape(-1, 1))
save_ndarray_to_file(os.path.join(dir, "z2.txt"), z2.detach().numpy().reshape(-1, 1))
save_ndarray_to_file(os.path.join(dir, "x2_grad.txt"), x2.grad.detach().numpy())

test = "test_sigmoid_variable"
dir = f"../test/test_data/test_variable/{test}/"
n = 10
x0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
z0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
y0 = torch.sigmoid(x0)
y0.backward(z0)
save_ndarray_to_file(os.path.join(dir, "x0.txt"), x0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "y0.txt"), y0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "z0.txt"), z0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "x0_grad.txt"), x0.grad.detach().numpy())
x1 = torch.rand(1, n, dtype=torch.double, requires_grad=True)
z1 = torch.rand(1, n, dtype=torch.double, requires_grad=True)
y1 = torch.sigmoid(x1)
y1.backward(z1)
save_ndarray_to_file(os.path.join(dir, "x1.txt"), x1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "y1.txt"), y1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "z1.txt"), z1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "x1_grad.txt"), x1.grad.detach().numpy())
x2 = torch.rand(n, 1, dtype=torch.double, requires_grad=True)
z2 = torch.rand(n, 1, dtype=torch.double, requires_grad=True)
y2 = torch.sigmoid(x2)
y2.backward(z2)
save_ndarray_to_file(os.path.join(dir, "x2.txt"), x2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "y2.txt"), y2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "z2.txt"), z2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "x2_grad.txt"), x2.grad.detach().numpy())

test = "test_softmax_variable"
dir = f"../test/test_data/test_variable/{test}/"
n = 10
x0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
z0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
y0 = torch.softmax(x0, dim=0)
y0.backward(z0)
save_ndarray_to_file(os.path.join(dir, "x0.txt"), x0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "y0.txt"), y0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "z0.txt"), z0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "x0_grad.txt"), x0.grad.detach().numpy())
x1 = torch.rand(n // 2, n, dtype=torch.double, requires_grad=True)
z1 = torch.rand(n // 2, n, dtype=torch.double, requires_grad=True)
y1 = torch.softmax(x1, dim=0)
y1.backward(z1)
save_ndarray_to_file(os.path.join(dir, "x1.txt"), x1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "y1.txt"), y1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "z1.txt"), z1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "x1_grad.txt"), x1.grad.detach().numpy())
x2 = torch.rand(n // 2, n, dtype=torch.double, requires_grad=True)
z2 = torch.rand(n // 2, n, dtype=torch.double, requires_grad=True)
y2 = torch.softmax(x2, dim=1)
y2.backward(z2)
save_ndarray_to_file(os.path.join(dir, "x2.txt"), x2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "y2.txt"), y2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "z2.txt"), z2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "x2_grad.txt"), x2.grad.detach().numpy())

test = "test_matmul_variable"
dir = f"../test/test_data/test_variable/{test}/"
n = 10
a0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
b0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
d0 = torch.rand(n, n, dtype=torch.double, requires_grad=True)
c0 = a0 @ b0
c0.backward(d0)
save_ndarray_to_file(os.path.join(dir, "a0.txt"), a0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b0.txt"), b0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c0.txt"), c0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d0.txt"), d0.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a0_grad.txt"), a0.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b0_grad.txt"), b0.grad.detach().numpy())
a1 = torch.rand(1, n, 1, dtype=torch.double, requires_grad=True)
b1 = torch.rand(1, 1, n, dtype=torch.double, requires_grad=True)
d1 = torch.rand(1, n, n, dtype=torch.double, requires_grad=True)
c1 = a1 @ b1
c1.backward(d1)
save_ndarray_to_file(os.path.join(dir, "a1.txt"), a1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b1.txt"), b1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c1.txt"), c1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d1.txt"), d1.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a1_grad.txt"), a1.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b1_grad.txt"), b1.grad.detach().numpy())
a2 = torch.rand(2, 1, n, dtype=torch.double, requires_grad=True)
b2 = torch.rand(2, n, 1, dtype=torch.double, requires_grad=True)
d2 = torch.rand(2, 1, 1, dtype=torch.double, requires_grad=True)
c2 = a2 @ b2
c2.backward(d2)
save_ndarray_to_file(os.path.join(dir, "a2.txt"), a2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b2.txt"), b2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c2.txt"), c2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d2.txt"), d2.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a2_grad.txt"), a2.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b2_grad.txt"), b2.grad.detach().numpy())
a3 = torch.rand(2, n // 2, n, dtype=torch.double, requires_grad=True)
b3 = torch.rand(2, n, n // 2, dtype=torch.double, requires_grad=True)
d3 = torch.rand(2, n // 2, n // 2, dtype=torch.double, requires_grad=True)
c3 = a3 @ b3
c3.backward(d3)
save_ndarray_to_file(os.path.join(dir, "a3.txt"), a3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b3.txt"), b3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c3.txt"), c3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d3.txt"), d3.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a3_grad.txt"), a3.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b3_grad.txt"), b3.grad.detach().numpy())

test = "test_backward_variable"
dir = f"../test/test_data/test_variable/{test}/"
n = 10
a = torch.rand(n, n, dtype=torch.double, requires_grad=True)
b = torch.rand(n, n, dtype=torch.double, requires_grad=True)
c = torch.rand(n, n, dtype=torch.double, requires_grad=True)
e = torch.rand(n, n, dtype=torch.double, requires_grad=True)
d = a * ((a * b) + c) + c
d.backward(e)
save_ndarray_to_file(os.path.join(dir, "a.txt"), a.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b.txt"), b.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c.txt"), c.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "d.txt"), d.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "e.txt"), e.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "a_grad.txt"), a.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "b_grad.txt"), b.grad.detach().numpy())
save_ndarray_to_file(os.path.join(dir, "c_grad.txt"), c.grad.detach().numpy())